@model IEnumerable<MVC5Course.Models.Client>

@{
    if (IsAjax)
    {
        Layout = "";
    }
    ViewBag.Title = "Index";
}

@using PagedList
@using PagedList.Mvc

@{
    var data = Model as IPagedList;
}

@if (TempData["SuccessMessage"] != null)
{
    <script>alert('@Ajax.JavaScriptStringEncode(Convert.ToString(TempData["SuccessMessage"]))')</script>
}
else
{
    <script>alert('= =')</script>
}

@section Scripts{
    <script>


    </script>    
}

<h2>Index</h2>

<p>
    @*@Html.ActionLink("Create New", "Create")*@
    @Ajax.ActionLink("Create New", "Create", new AjaxOptions() { UpdateTargetId = "Details" })
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".bs-example-modal-lg">Large modal</button>
</p>
<div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @*@Html.ActionLink("Create", "Create")*@
            @Html.Action("Create")
        </div>
    </div>
</div>

@Html.PagedListPager(data, p => Url.Action("Index", new { pageNo = p }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing("#main"))

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreditRating)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MiddleName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @*@Html.DisplayFor(modelItem => item.Gender, "性別")*@
            @Html.DisplayFor(modelItem => item.Gender)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateOfBirth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreditRating)
        </td>
        
        <td>
            @*@Html.ActionLink("Edit", "Edit", new { id=item.ClientId }) |
            @Html.ActionLink("Details", "Details", new { id=item.ClientId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ClientId })*@
            @Ajax.ActionLink("Edit", "Edit", new { id=item.ClientId } , new AjaxOptions() { UpdateTargetId="Details" }) |
        @Ajax.ActionLink("Details", "Details", new { id=item.ClientId } , new AjaxOptions() { UpdateTargetId = "Details" }) |
        @Ajax.ActionLink("Delete", "Delete", new { id=item.ClientId }, new AjaxOptions() { UpdateTargetId = "Details" })
        </td>
    </tr>
}

</table>

<div id="Details"></div>



@Html.PagedListPager(data, p=> Url.Action("Index",new { pageNo = p } ))